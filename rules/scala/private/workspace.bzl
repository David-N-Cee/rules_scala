load("//rules/common:private/utils.bzl", "safe_name", "strip_margin")

def configure_scala_repository_implementation(ctx):
    build_contents = strip_margin("""
      |#
      |# generated by scala annex
      |#
      |
      |load(
      |    "@rules_scala_annex//rules:scala.bzl",
      |    _configure_basic_scala = "configure_basic_scala",
      |    _configure_scala = "configure_scala",
      |)
      |
      |load(
      |    "@rules_scala_annex//rules:scalac.bzl",
      |    _scalac_library = "scalac_library",
      |)
      |
      |_compiler_classpath = [
      |    '@{name}_scala_compiler//jar',
      |    '@{name}_scala_reflect//jar',
      |    '@{name}_scala_library//jar',
      |]
      |
      |_runtime_classpath = [
      |    '@{name}_scala_library//jar',
      |]
      |
      |_configure_basic_scala(
      |    name = "basic",
      |    compiler_classpath = _compiler_classpath,
      |    runtime_classpath = _runtime_classpath,
      |    version = "{version}",
      |    visibility = ["//visibility:public"],
      |)

      |_compiler_bridge_classpath = [
      |    '@scala_annex_org_scala_sbt_compiler_interface//jar',
      |    '@scala_annex_org_scala_sbt_util_interface//jar',
      |]
      |
      |_scalac_library(
      |    name = "compiler_bridge",
      |    srcs = ['{compiler_bridge}'],
      |    scala = ":basic",
      |    deps = _compiler_classpath + _compiler_bridge_classpath,
      |    visibility = ["//visibility:public"],
      |)
      |
      |_configure_scala(
      |    name = '{name}',
      |    compiler_bridge = ':compiler_bridge',
      |    compiler_classpath = _compiler_classpath,
      |    runtime_classpath = _runtime_classpath,
      |    version = '{version}',
      |    visibility = ["//visibility:public"],
      |)
    """.format(
        version = ctx.attr.version,
        name = ctx.name,
        compiler_bridge = ctx.attr.compiler_bridge,
    ))

    ctx.file("BUILD", build_contents, False)
